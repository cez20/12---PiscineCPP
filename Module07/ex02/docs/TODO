[]Creez une classe template Array (tableau) contenant des elements de type T et qui implemente le comportement suivants et les fonctions suivantes:

    [X]La classe doit contenir des elements de type T   template < typename T>
    [X]Construction SANS parametres : cree un array vide
        [X] Jai cree un instance de array de type int qui est vide.
    [X]Construction avec un parametre de type unsigned int n: cree un array de N element initialise par default
        Conseil: essayer de compiler int *a = new int();, puis afficher *a;
    [X] Construction par recopie et surcharge de loperateur daffectation. Dans les 2 cas, apres une copie, toute modification de larray original ou
        de sa copie ne doit pas impacter lautre array.
        [X] Deep copy
    [X] Vous DEVEZ utiliser l’opérateur new[] pour allouer de la mémoire. Toute allocation préventive (c’est-à-dire allouer de la mémoire en avance) est interdite. Votre
        rogramme ne doit pas pouvoir accéder à une zone non allouée.
    [X] Les éléments doivent être accessibles grâce à l’opérateur d’indice : [ ]
    [] En cas d’index invalide lors d’une tentative d’accès d’un élément en utilisant l’opérateur [ ], une std::exception est jetée.
    [X] Une fonction membre size() qui retourne le nombre d’éléments dans l’array. Cette
        fonction membre ne prend aucun paramètre et ne doit pas modifier l’instance courante.
    [X] Pas de leaks;
    [] Faire des test avec dautres type de valuer que int

        Comme d’habitude, assurez-vous que tout fonctionne comme attendu et rendez un
        fichier main.cpp contenant vos tests.       